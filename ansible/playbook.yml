---

# An Ansible playbook to install the SVPB Web application on a Linux machine
# Assumptions:
# - dnf-based system; tested on CentOS 8 Stream
# Currently only intended for tests in a local VM with vagrant.
# Not tested in production. Production would need a more secure configuration.


- name: Configure SELinux
  become: true
  hosts: svpb
  tasks:
    - name: Put SELinux in permissive mode, logging actions that would be blocked.
      ansible.posix.selinux:
        policy: targeted
        state: permissive


- name: PostgresDB
  become: true
  hosts: svpb
  tasks:
    - name: Install postgresql
      ansible.builtin.dnf:
        name: '@postgresql:16/server'
        state: present
    - name: Check if postgresql needs init
      ansible.builtin.stat:
        path: /var/lib/pgsql/data/PG_VERSION
      register: pgdata_dir_initialized
    - name: Init postgresql
      ansible.builtin.command: postgresql-setup --initdb
      when: not pgdata_dir_initialized.stat.exists
    - name: Enable local login with hashed password - IPv4
      ansible.builtin.replace:
        dest: /var/lib/pgsql/data/pg_hba.conf
        regexp: ^(host[ ]+all[ ]+all[ ]+127.0.0.1/32[ ]+)ident
        replace: \1md5
    - name: Enable local login with hashed password - IPv6
      ansible.builtin.replace:
        dest: /var/lib/pgsql/data/pg_hba.conf
        regexp: ^(host[ ]+all[ ]+all[ ]+::1/128[ ]+)ident
        replace: \1md5
    - name: Enable & restart service
      ansible.builtin.service:
        name: postgresql
        state: restarted
        enabled: true
    - name: Ansible postgresdb requirements via dnf
      ansible.builtin.dnf:
        name: python3-psycopg2
        state: latest
    - name: Create Postgres DB
      become: true
      become_user: postgres
      community.postgresql.postgresql_db:
        name: svpbdata
    - name: Create Postgres DB User
      become: true
      become_user: postgres
      community.postgresql.postgresql_user:
        db: svpbdata
        name: svpbdb
        password: exyn9pwZvyJRDEjYQpuH  # For development only (same as in svpb/settings/vm.py)
        encrypted: true
    - name: Set Postgres permissions for database
      become: true
      become_user: postgres
      community.postgresql.postgresql_privs:
        db: svpbdata
        privs: ALL
        type: database
        objs: svpbdata
        role: svpbdb
    - name: Set Postgres permissions for schema
      become: true
      become_user: postgres
      community.postgresql.postgresql_privs:
        db: svpbdata
        privs: USAGE,CREATE
        type: schema
        objs: public
        role: svpbdb


- name: CreateSVPB-User
  hosts: svpb
  become: true
  tasks:
    - name: Ensure svpb user exists
      ansible.builtin.user:
        name: svpb
        comment: "SVPB Arbeitsplan User"
        generate_ssh_key: true
        state: present
        shell: /bin/bash
    - name: Fix home permissions (due to synced folder config created as root)
      ansible.builtin.file:
        path: ~svpb
        owner: svpb
        group: svpb
        mode: 0700
    - name: Allow svpb to sudo without password (DO NEVER RUN THIS IN PRODUCTION)
      community.general.sudoers:
        name: svpb-user
        user: svpb
        runas: ALL
        commands: ALL
        nopassword: true


- name: Basic software installation
  hosts: svpb
  become: true
  tasks:
    - name: Basic software via dnf
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: present
      with_items:
        - git
        - glibc-langpack-de
        - python3-devel # needed to build Pillow
        - zlib-devel # needed to build Pillow
        - libjpeg-devel # needed to build Pillow
        - python3-pip
        - '@nginx:1.24/common'
    - name: LaTeX requirements for sphinx and generation of new member letters
      ansible.builtin.dnf:
        name: "{{ item }}"
        state: latest
      with_items:
        - texlive-collection-fontsrecommended
        - texlive-collection-latex
        - texlive-babel-german
        - texlive-capt-of
        - texlive-cmap
        - texlive-fncychap
        - texlive-framed
        - texlive-needspace
        - texlive-parskip
        - texlive-tabulary
        - texlive-titlesec
        - texlive-upquote
        - texlive-wrapfig
        - latexmk
        - texlive-german
        - texlive-euenc
  tags: software


- name: GetSVPB
  become: true
  become_user: svpb
  hosts: svpb
  tasks:
    - name: Get the repository
      ansible.builtin.git:
        repo: https://github.com/svpbde/svpb.git
        dest: /home/svpb/svpb
        update: false
        version: develop
    - name: Patch manage.py to use the VM settings file
      ansible.builtin.replace:
        dest: /home/svpb/svpb/manage.py
        regexp: 'settings.local'
        replace: 'settings.vm'
    - name: Patch wsgi.py to use the VM settings file
      ansible.builtin.replace:
        dest: /home/svpb/svpb/svpb/wsgi.py
        regexp: 'settings.production'
        replace: 'settings.vm'
    - name: Create logs directory
      ansible.builtin.file:
        path: /home/svpb/svpb/logs
        state: directory
    - name: Install python requirements via pip
      ansible.builtin.pip:
        requirements: /home/svpb/svpb/requirements.txt
        virtualenv: /home/svpb/svpb-venv
        virtualenv_command: python3 -m venv
    - name: Migrate the database
      community.general.django_manage:
        command: migrate
        app_path: /home/svpb/svpb
        virtualenv: /home/svpb/svpb-venv
    - name: Cronjob for queued mails
      ansible.builtin.cron:
        name: "Send queued mails"
        hour: "*"
        minute: "*"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb; /home/svpb/svpb-venv/bin/python3 manage.py send_queued_mail > /home/svpb/svpb/logs/send_queued_mail.log 2>&1"
    - name: Cronjob for deleting mails older than 90 days
      ansible.builtin.cron:
        name: "Delete mails older than 90 days"
        hour: "2"
        minute: "0"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb; /home/svpb/svpb-venv/bin/python3 manage.py cleanup_mail --days 90 --delete-attachements > /home/svpb/svpb/logs/cleanup_mail.log 2>&1"
    - name: Cronjob for emailing
      ansible.builtin.cron:
        name: "Send emails for upcoming jobs"
        hour: "3"
        minute: "0"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py upcomingJob 2 > /home/svpb/svpb/logs/upcomingJobs.log  2>&1"
    - name: Cronjob for emailing earlier
      ansible.builtin.cron:
        name: "Send early emails for upcoming jobs"
        hour: "3"
        minute: "10"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py upcomingJob 5 >> /home/svpb/svpb/logs/upcomingJobs.log  2>&1"
    - name: Cronjob for leistungsreminder
      ansible.builtin.cron:
        name: "Send emails to process Leistungsmeldungen"
        hour: "3"
        minute: "20"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py reminderLeistungen > /home/svpb/svpb/logs/reminderLeistungen.log  2>&1"
    - name: Cronjob clearing expired sessions
      ansible.builtin.cron:
        name: "Clear expired sessions from database"
        hour: "3"
        minute: "30"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py clearsessions > /home/svpb/svpb/logs/clearsessions.log  2>&1"
  tags: svpb

- name: Nginx configuration
  # Compare http://uwsgi-docs.readthedocs.org/en/latest/tutorials/Django_and_nginx.html
  become: true
  become_user: svpb
  hosts: svpb
  vars:
    svpbhome: /home/svpb/svpb
    svpbfqdn: mein.svpb.de
  tasks:
    # static files in place:
    - name: Grant nginx access to svpb's home for serving static files
      become: true
      become_user: root
      ansible.builtin.file:
        path: ~svpb
        owner: svpb
        group: nginx
        mode: 0750
    - name: Ensure static directory exists
      ansible.builtin.file:
        dest: /home/svpb/svpb/static
        state: directory
        mode: 0755
    - name: Run collectstatic
      community.general.django_manage:
        command: collectstatic
        app_path: "{{ svpbhome }}"
        virtualenv: /home/svpb/svpb-venv
    # nginx config patches for local dev VM
    - name: Patch the svpb_nginx conf file - Disable SSL
      ansible.builtin.replace:
        path: /home/svpb/svpb/wsgi/svpb_nginx.conf
        after: "# substitute your machine's IP address or FQDN"
        before: '    charset'
        regexp: '.*'
        replace: ''
    - name: Patch the svpb_nginx conf file - Allow access from localhost
      ansible.builtin.replace:
        path: /home/svpb/svpb/wsgi/svpb_nginx.conf
        after: "server_name "
        before: ';'
        regexp: '.*'
        replace: '127.0.0.1'
    # symblink the just created config file
    - name: Symlink the svpb configuration file from nginx
      become: true
      become_user: root
      ansible.builtin.file:
        dest: /etc/nginx/conf.d/svpb_conf.conf
        src: /home/svpb/svpb/wsgi/svpb_nginx.conf
        state: link
    - name: Restart and enable nginx
      become: true
      become_user: root
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: true
    # start uwsgi happens via the svpb start!
  tags: nginx

- name: Setup svpb service with systemd
  become: true
  hosts: svpb
  tasks:
    - name: Place service file
      ansible.builtin.copy:
        dest: /etc/systemd/system/svpb.service
        src: svpb.service
        owner: root
        group: root

- name: StartSVPB
  # this actually starts uwsgi!
  become: true
  hosts: svpb
  tasks:
    - name: Ensure start up of SVPB
      ansible.builtin.service:
        name: svpb
        state: restarted
        enabled: true
  tags: svpb

# Note: Generating class diagrams for documentation is not needed frequently,
# the following can be skipped
- name: Dependencies to generate class diagrams
  hosts: svpb
  tasks:
    - name: Install graphviz
      become: true
      become_user: root
      ansible.builtin.dnf:
        name: graphviz
        state: latest
    - name: Install pydot
      become: true
      become_user: svpb
      ansible.builtin.pip:
        name: pydot
        virtualenv: /home/svpb/svpb-venv


- name: Regular jobs
  # check consistency, later on: send out emails
  become: true
  become_user: svpb
  hosts: svpb
  tasks:
    - name: Check Medlung consistency regularly, cronjob
      ansible.builtin.cron:
        name: "Meldung check"
        hour: "3"
        minute: "10"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py meldungConsistent > /home/svpb/svpb/logs/check.log  2>&1"
    - name: Yearend check, set Arbeitslast to default for newly joined members
      ansible.builtin.cron:
        name: "Yearend check"
        hour: "23"
        minute: "0"
        day: "31"
        month: "12"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py yearendArbeitslast > /home/svpb/svpb/logs/yearend.log  2>&1"
    - name: Send reservation emails
      ansible.builtin.cron:
        name: "Send reservation emails"
        minute: "12"
        user: svpb
        state: present
        job: "cd /home/svpb/svpb ; /home/svpb/svpb-venv/bin/python3 manage.py reservationEmails > /home/svpb/svpb/logs/reservation.emails.log 2>&1"
  tags: regular
